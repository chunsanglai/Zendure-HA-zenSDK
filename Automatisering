alias: Zendure zenSDK (Gielz)
description: Versie 20251004
triggers:
  - at: "00:00:00"
    trigger: time
    id: middernacht_trigger
  - seconds: /4
    trigger: time_pattern
  - platform: state
    entity_id: binary_sensor.dynamisch_goedkope_uren_nu
  - entity_id:
      - input_number.zendure_2400_ac_handmatig_vermogen
    trigger: state
  - entity_id:
      - input_select.zendure_2400_ac_modus_selecteren
    id: modus_trigger
    trigger: state
conditions: []
actions:
  - alias: Modus
    choose:
      - conditions:
          - condition: trigger
            id: modus_trigger
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Standby
        sequence:
          - action: rest_command.zendure_standby
            data: {}
        alias: Standby

      - conditions:
          - condition: trigger
            id: modus_trigger
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Handmatig
        sequence:
          - action: rest_command.zendure_stop_met_alles
            data: {}
        alias: Handmatig

      - conditions:
          - condition: trigger
            id: modus_trigger
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Nul op de meter
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: sensor.<LAADPAAL>
                    state: charging
                sequence:
                  - action: rest_command.zendure_stop_met_alles
                    data: {}
                alias: Stop alles wanneer EV laadt
              - conditions:
                  - condition: not
                    conditions:
                      - condition: state
                        entity_id: sensor.<LAADPAAL>
                        state: charging
                sequence:
                  - action: rest_command.zendure_stop_met_alles
                    data: {}
                alias: Initialiseer Nul op de Meter wanneer EV niet laadt
        alias: Nul op de meter

      - conditions:
          - condition: trigger
            id: modus_trigger
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Alleen slim ontladen
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Alleen slim opladen
        sequence:
          - action: rest_command.zendure_stop_met_alles
            data: {}
        alias: Alleen slim opladen/ontladen

      - conditions:
          - condition: trigger
            id: modus_trigger
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Ontladen met 2400 watt
        sequence:
          - action: rest_command.zendure_snel_ontladen
            data: {}
        alias: Ontladen met 2400 watt

      - conditions:
          - condition: trigger
            id: modus_trigger
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Opladen met 2400 watt
        sequence:
          - action: rest_command.zendure_snel_laden
            data: {}
        alias: Opladen met 2400 watt

  - alias: Aansturing
    choose:
      # EV override
      - conditions:
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Nul op de meter
          - condition: state
            entity_id: sensor.<LAADPAAL>
            state: charging
        sequence:
          - action: rest_command.zendure_stop_met_alles
            data: {}
        alias: EV laadt → alles stoppen (override Nul op de Meter)

      # Goedkoop slot → forceer laden
      - conditions:
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Nul op de meter
          - condition: state
            entity_id: binary_sensor.dynamisch_goedkope_uren_nu
            state: "on"
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_laadpercentage
            below: 100
        sequence:
          - action: rest_command.zendure_snel_laden
            data: {}
        alias: Goedkoop slot → forceer laden (2400 W)

      # Einde goedkoop slot → terug naar NODM (ipv alleen stoppen)
      - conditions:
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Nul op de meter
          - condition: state
            entity_id: binary_sensor.dynamisch_goedkope_uren_nu
            state: "off"
          - condition: state
            entity_id: sensor.zendure_2400_ac_modus
            state: Opladen
        sequence:
          - action: rest_command.zendure_stop_met_alles
            data: {}
          - delay: "00:00:02"
          - choose:
              # A) import > +100W → ontladen richting 0W (balanceren)
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.p1_aansturing_api_v1
                    above: 100
                  - condition: template
                    value_template: >
                      {{ states('sensor.zendure_2400_ac_laadpercentage') | float >
                         states('sensor.zendure_2400_ac_minimale_laadpercentage') | float }}
                sequence:
                  - action: rest_command.zendure_x_ontladen_balanceren
                    data:
                      outputLimit: >-
                        {% set factor = 1.00 %}
                        {% set cap = 2400 %}
                        {% set correctie = -2 %}
                        {% set p1 = states('sensor.p1_aansturing_api_v1') | float(0) %}
                        {% set zendure = states('sensor.zendure_2400_ac_vermogen_aansturing') | float(0) %}
                        {% set totaal = (p1 - zendure - correctie) * factor %}
                        {% set beperkt = [ [totaal, 0] | max, cap ] | min %}
                        {{ beperkt | int }}

              # B) export < -100W & SoC < 100% → laden richting -40W (balanceren)
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.p1_aansturing_api_v1
                    below: -100
                  - condition: numeric_state
                    entity_id: sensor.zendure_2400_ac_laadpercentage
                    below: 100
                sequence:
                  - action: rest_command.zendure_x_laden_balanceren
                    data:
                      inputLimit: >-
                        {% set factor = 1.00 %}
                        {% set cap = 2400 %}
                        {% set correctie_export = 40 %}
                        {% set p1 = states('sensor.p1_aansturing_api_v1') | float(0) %}
                        {% set zendure = states('sensor.zendure_2400_ac_vermogen_aansturing') | float(0) %}
                        {% set verschil = (zendure - p1 - correctie_export) * factor %}
                        {% set beperkt = [ [verschil, 0] | max, cap ] | min %}
                        {{ beperkt | int }}

              # C) anders: neutraal blijven
              - conditions: []
                sequence:
                  - action: rest_command.zendure_opslaan_in_ram
                    data: {}
        alias: Einde goedkoop slot → terug naar NODM

      # (jouw bestaande NODM-blokken hierna ongewijzigd)
      - conditions:
          - condition: numeric_state
            entity_id: sensor.p1_aansturing_api_v1
            above: 100
          - condition: template
            value_template: |
              {{ states('sensor.zendure_2400_ac_laadpercentage') | float >
                 states('sensor.zendure_2400_ac_minimale_laadpercentage') | float }}
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_vermogen_aansturing
            above: -30
            below: 75
          - condition: or
            conditions:
              - condition: state
                entity_id: sensor.zendure_2400_ac_modus
                state: Opladen
                for: "00:00:09"
              - condition: state
                entity_id: sensor.zendure_2400_ac_modus
                state: Ontladen
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Nul op de meter
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Alleen slim ontladen
        sequence:
          - data:
              outputLimit: >-
                {% set factor = 0.75 %} {% set cap = 2400 %} {% set correctie =
                -2 %} {% set p1 = states('sensor.p1_aansturing_api_v1') |
                float(0) %} {% set zendure =
                states('sensor.zendure_2400_ac_vermogen_aansturing') | float(0)
                %} {% set totaal = (p1 - zendure - correctie) * factor %} {% set
                beperkt = [ [totaal, 0] | max, cap ] | min %} {{ beperkt | int
                }}
            action: rest_command.zendure_x_ontladen
        alias: Start met ontladen bij +100 watt (75% van de vraag)

      - conditions:
          - condition: template
            value_template: |
              {{ states('sensor.zendure_2400_ac_laadpercentage') | float >
                 states('sensor.zendure_2400_ac_minimale_laadpercentage') | float }}
          - condition: template
            value_template: >-
              {% set factor = 1.00 %} {% set cap = 2400 %} {% set correctie = -2
              %} {% set p1 = states('sensor.p1_aansturing_api_v1') | float(0) %}
              {% set zendure =
              states('sensor.zendure_2400_ac_vermogen_aansturing') | float(0) %}
              {% set totaal = (p1 - zendure - correctie) * factor %} {% set
              beperkt = [ [totaal, 0] | max, cap ] | min %} {% set target =
              beperkt | int %} {% set huidig =
              states('sensor.zendure_2400_ac_ingesteld_ontlaadvermogen') |
              int(0) %} {{ huidig != target }}
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_vermogen_aansturing
            below: 0
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Nul op de meter
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Alleen slim ontladen
        sequence:
          - data:
              outputLimit: >-
                {% set factor = 1.00 %} {% set cap = 2400 %} {% set correctie =
                -2 %} {% set p1 = states('sensor.p1_aansturing_api_v1') |
                float(0) %} {% set zendure =
                states('sensor.zendure_2400_ac_vermogen_aansturing') | float(0)
                %} {% set totaal = (p1 - zendure - correctie) * factor %} {% set
                beperkt = [ [totaal, 0] | max, cap ] | min %} {{ beperkt | int
                }}
            action: rest_command.zendure_x_ontladen_balanceren
        alias: Tijdens ontladen balanceren naar 0 watt (100% van de vraag)

      - conditions:
          - condition: numeric_state
            entity_id: sensor.p1_aansturing_api_v1
            below: -100
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_laadpercentage
            below: 100
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_vermogen_aansturing
            above: -30
            below: 30
          - condition: not
            conditions:
              - condition: state
                entity_id: sensor.zendure_2400_ac_modus
                state: Ontladen
                for: "00:00:15"
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Nul op de meter
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Alleen slim opladen
        sequence:
          - data:
              inputLimit: >-
                {% set factor = 0.75 %} {% set cap = 2400 %} {% set
                correctie_export = 40 %} {% set p1 =
                states('sensor.p1_aansturing_api_v1') | float(0) %} {% set
                zendure = states('sensor.zendure_2400_ac_vermogen_aansturing') |
                float(0) %} {% set verschil = zendure - p1 - correctie_export %}
                {% set beperkt = verschil * factor if verschil > 0 else 0 %} {%
                set beperkt = beperkt if beperkt < cap else cap %} {{ beperkt |
                int }}
            action: rest_command.zendure_x_laden
        alias: Start met opladen bij -100 watt (75% van aanbod)

      - conditions:
          - condition: template
            value_template: >-
              {% set factor = 1.00 %} {% set cap = 2400 %} {% set
              correctie_export = 40 %} {% set p1 =
              states('sensor.p1_aansturing_api_v1') | float(0) %} {% set zendure
              = states('sensor.zendure_2400_ac_vermogen_aansturing') | float(0)
              %} {% set verschil = (zendure - p1 - correctie_export) * factor %}
              {% set beperkt = [ [verschil, 0] | max, cap ] | min %} {% set
              target = beperkt | int %} {% set huidig =
              states('sensor.zendure_2400_ac_ingesteld_oplaadvermogen') | int(0)
              %} {{ huidig != target }}
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_laadpercentage
            below: 100
          - condition: numeric_state
            entity_id: sensor.zendure_2400_ac_vermogen_aansturing
            above: 0
          - condition: not
            conditions:
              - condition: state
                entity_id: sensor.zendure_2400_ac_modus
                state: Ontladen
                for: "00:00:15"
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Nul op de meter
              - condition: state
                entity_id: input_select.zendure_2400_ac_modus_selecteren
                state: Alleen slim opladen
        sequence:
          - data:
              inputLimit: >-
                {% set factor = 1.00 %} {% set cap = 2400 %} {% set
                correctie_export = 40 %} {% set p1 =
                states('sensor.p1_aansturing_api_v1') | float(0) %} {% set
                zendure = states('sensor.zendure_2400_ac_vermogen_aansturing') |
                float(0) %} {% set verschil = zendure - p1 - correctie_export %}
                {% set beperkt = verschil * factor if verschil > 0 else 0 %} {%
                set beperkt = beperkt if beperkt < cap else cap %} {{ beperkt |
                int }}
            action: rest_command.zendure_x_laden_balanceren
        alias: Tijdens opladen balanceren naar -40 watt (100% van aanbod)

      - conditions:
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Handmatig
          - condition: numeric_state
            entity_id: input_number.zendure_2400_ac_handmatig_vermogen
            below: 0
        sequence:
          - data:
              outputLimit: >-
                {{ states('input_number.zendure_2400_ac_handmatig_vermogen') |
                int | abs }}
            action: rest_command.zendure_x_ontladen
        alias: Handmatig ontladen

      - conditions:
          - condition: state
            entity_id: input_select.zendure_2400_ac_modus_selecteren
            state: Handmatig
          - condition: numeric_state
            entity_id: input_number.zendure_2400_ac_handmatig_vermogen
            above: -1
        sequence:
          - data:
              inputLimit: >-
                {{ states('input_number.zendure_2400_ac_handmatig_vermogen') |
                int | abs }}
            action: rest_command.zendure_x_laden
        alias: Handmatig laden
mode: queued
max: 50